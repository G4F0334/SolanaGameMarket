import express from "express";
import * as solanaController from "./solana.controller.js";
import * as solanaWeb3Controller from "./solana-web3-controller.js";

const router = express.Router();

/**
 * üéÆ Solana API Routes –¥–ª—è Game Marketplace
 * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ NFT –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–ª–æ–∫—á–µ–π–Ω–æ–º
 */

// üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å—Ç–∞—Ç—É—Å (—Å—Ç–∞—Ä—ã–π Umi –∫–ª–∏–µ–Ω—Ç)
router.post("/init", solanaController.initializeSolana);
router.get("/init", solanaController.initializeSolana); // –î–æ–±–∞–≤–ª—è–µ–º GET –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
router.get("/status", solanaController.getSolanaStatus);

// üè™ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –∏–≥—Ä (—Å—Ç–∞—Ä—ã–π Umi –∫–ª–∏–µ–Ω—Ç)
router.post("/collection", solanaController.createGameCollection);

// üé® NFT –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å—Ç–∞—Ä—ã–π Umi –∫–ª–∏–µ–Ω—Ç)
router.post("/mint-nft", solanaController.mintItemNFT);
router.post("/list-nft", solanaController.createNFTListing);
router.get("/nft/:mint", solanaController.getNFTMetadata);

// üí∞ –ö–æ—à–µ–ª–µ–∫ (—Å—Ç–∞—Ä—ã–π Umi –∫–ª–∏–µ–Ω—Ç)
router.get("/wallet/balance", solanaController.getWalletBalance);

// ‚ú® –ù–û–í–´–ï WEB3.JS ROUTES ‚ú®
// üîß Web3 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å—Ç–∞—Ç—É—Å
router.post("/web3/init", solanaWeb3Controller.initializeWeb3Client);
router.get("/web3/status", solanaWeb3Controller.getWeb3Status);

// üè™ Web3 –∫–æ–ª–ª–µ–∫—Ü–∏–∏
router.post("/web3/create-collection", solanaWeb3Controller.createGameCollection);

// üé® Web3 NFT –æ–ø–µ—Ä–∞—Ü–∏–∏
router.post("/web3/mint-nft", solanaWeb3Controller.mintGameItemNFT);
router.post("/web3/batch-mint", solanaWeb3Controller.batchMintNFTs);
router.get("/web3/nft/:mint", solanaWeb3Controller.getNFTInfo);

// üí∞ Web3 –∫–æ—à–µ–ª–µ–∫
router.get("/web3/balance", solanaWeb3Controller.getWalletBalance);
router.post("/web3/send-sol", solanaWeb3Controller.sendSOL);

export default router;
